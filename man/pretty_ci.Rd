% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pretty_ci.R
\name{pretty_ci}
\alias{pretty_ci}
\title{Format an estimate, lower and upper confidence intervals into a single character string}
\usage{
pretty_ci(est, lci, uci, string = FALSE, sep = " to ", digits = 2,
  inline = FALSE, note = "95\% CI")
}
\arguments{
\item{est}{A numeric or character vector of estimates.}

\item{lci}{A numeric or character vector of lower confidence/credible intervals.}

\item{uci}{A numeric or character vector of upper confidence/credible intervals.}

\item{string}{A logicial (defaults to \code{FALSE}) indicating if the estimates are being passed as a string
to \code{est} (formatted as est, lci, uci) or seperately to \code{est}, \code{lci} and \code{uci}. Supports  single estimates or a list/dataframe.}

\item{sep}{A character vector indicating the seperator used between the upper and
lower confidence/credible intervals. The default is ' to '.}

\item{digits}{Integer indicating the number of decimal places to be used.}

\item{inline}{Logical operator indicating whether an explanatory note is required.}

\item{note}{A character vector indicating the explanatory note to be used.}
}
\value{
The estimate with formated upper, and lower confidence/credible
intervals as a character vector.
}
\description{
Take numeric/character vectors of the estimate, and upper/lower confidence/credible
intervals, round with trailing zeros and format into the required journal style.
}
\examples{
## Formating a single confidence interval
pretty_ci(2, lci = 1, uci = 3)

## Formating vectors of confidence intervals
est <- c(0, 1, 100, 300, 21221, 403)
lci <- c(-123, -0.2, 50, 100, 12321, 200)
uci <- c(10, 2, 200, 400, 30122, 500)

pretty_ci(est, lci = lci, uci = uci, sep = '-', digits = 1)

## Use in a dplyr workflow
library(dplyr)

x <- data_frame(est = c(0,1), lci = c(0, 2), uci = c(1, 4))
x <- x \%>\% mutate(ci = est \%>\% pretty_ci(lci = lci, uci = uci, sep = ' by ', digits = 0))

## Passing values as a single string
est <- c(0, -1, 1)
pretty_ci(est, string = TRUE)

est <- data.frame(est = c(1,2), lci = c(0, 1), uci = c(2, 3))
pretty_ci(est, string = TRUE)
}
\seealso{
pretty_round pretty_percentage
}
