% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pretty_per_effect.R
\name{pretty_per_effect}
\alias{pretty_per_effect}
\title{A Function to Convert Effect Estimates into Percentage Changes}
\usage{
pretty_per_effect(est = NULL, lci = NULL, uci = NULL, string = FALSE,
  sep = " to ", note = "95\% CI ", digits = 0, inline = FALSE,
  percentage = TRUE, effect_direct = "increase", ...)
}
\arguments{
\item{est}{A numeric or character vector of estimates.}

\item{lci}{A numeric or character vector of lower confidence/credible intervals.}

\item{uci}{A numeric or character vector of upper confidence/credible intervals.}

\item{string}{A logicial (defaults to \code{FALSE}) indicating if the estimates are being passed as a string
to \code{est} (formatted as est, lci, uci) or seperately to \code{est}, \code{lci} and \code{uci}. Supports  single estimates or a list/dataframe.}

\item{sep}{A character vector indicating the seperator used between the upper and
lower confidence/credible intervals. The default is ' to '.}

\item{note}{A character vector indicating the explanatory note to be used.}

\item{digits}{Integer indicating the number of decimal places to be used.}

\item{inline}{Logical operator indicating whether an explanatory note is required.}

\item{percentage}{A logical (defaults to \code{FALSE}), which indicates whether the output should
be treated as a percentage.}

\item{effect_direct}{A character string indicating the direction of the percentage.
Can be specified as "increase" or "decrease" (defaults to "increase").}

\item{...}{Pass additional arguements to \code{\link[prettypublisher]{pretty_ci}}}
}
\value{
A pretty formated percentage with confidence intervals
}
\description{
A function to convert effect estimates into percentage changes for use in line in
publications. It can either convert an effect estimate with lower and upper confidence intervals that
is unformated into a pretty formated percentage or it can convert a \code{\link[prettypublisher]{pretty_ci}}
formatted effect size into a pretty formated percentage.
}
\examples{

est <- 1.2
lci <- 1.1
uci <- 1.3

## As unformated effects
pretty_per_effect(est, lci, uci)

## As formated effects

x <- pretty_ci(est, lci, uci, inline = TRUE)
pretty_per_effect(x, string = TRUE, inline = TRUE)

## For a decrease
pretty_per_effect(x, string = TRUE, inline = TRUE, effect_direct = "decrease")

## Vectorised (as a string)
est <- c(est, 1.1)
lci <- c(lci, 1)
uci <- c(uci, 1.2)

pretty_per_effect(est, lci, uci)
}
\seealso{
pretty_ci
}
